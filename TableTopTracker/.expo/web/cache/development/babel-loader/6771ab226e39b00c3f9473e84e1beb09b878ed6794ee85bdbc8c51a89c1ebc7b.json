{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport * as React from 'react';\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { PaperProvider } from 'react-native-paper';\nimport { name as appName } from \"./app.json\";\nimport theme from \"./theme\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Landing from \"./screens/Landing.js\";\nimport SignUp from \"./screens/SignUp.js\";\nimport Login from \"./screens/Login.js\";\nimport Home from \"./screens/Home.js\";\nimport NewUserPreferences from \"./screens/NewUserPreferences.js\";\nimport UserAccount from \"./screens/UserAccount\";\nimport GameDetails from \"./screens/GameDetails\";\nimport GameWarden from \"./screens/GameWarden\";\nimport Search from \"./screens/Search\";\nimport SearchResults from \"./screens/SearchResults.js\";\nimport personalDummyGames from \"./components/GameList/dummy/personalDummyGames\";\nvar Stack = createNativeStackNavigator();\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport firebaseConfig from \"./firebaseConfig.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\nexport default function App() {\n  var listTypes = ['All', 'My Games', 'Recommendations', 'Liked', 'Wishlist'];\n  var _useState = useState('Arnold'),\n    _useState2 = _slicedToArray(_useState, 2),\n    username = _useState2[0],\n    setUsername = _useState2[1];\n  var _React$useState = React.useState(listTypes[0]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    selectedList = _React$useState2[0],\n    setSelectedList = _React$useState2[1];\n  return _jsx(PaperProvider, {\n    theme: theme,\n    children: _jsx(NavigationContainer, {\n      children: _jsxs(Stack.Navigator, {\n        children: [_jsx(Stack.Screen, {\n          name: \"Landing\",\n          component: Landing,\n          options: {\n            title: 'TableTop Tracker'\n          }\n        }), _jsx(Stack.Screen, {\n          name: \"Sign Up\",\n          component: SignUp\n        }), _jsx(Stack.Screen, {\n          name: \"Login\",\n          component: Login\n        }), _jsx(Stack.Screen, {\n          name: \"New User Preferences\",\n          component: NewUserPreferences\n        }), _jsx(Stack.Screen, {\n          name: \"User Account\",\n          component: UserAccount\n        }), _jsx(Stack.Screen, {\n          name: \"Home\",\n          component: Home,\n          username: username\n        }), _jsx(Stack.Screen, {\n          name: \"Game Details\",\n          component: GameDetails\n        }), _jsx(Stack.Screen, {\n          name: \"Game Warden\",\n          component: GameWarden\n        }), _jsx(Stack.Screen, {\n          name: \"Search Results\",\n          component: SearchResults\n        }), _jsx(Stack.Screen, {\n          name: \"Search\",\n          component: Search\n        })]\n      })\n    })\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  gameListContent: {\n    flex: 1,\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["React","AppRegistry","PaperProvider","name","appName","theme","StatusBar","StyleSheet","Text","View","Button","NavigationContainer","createNativeStackNavigator","Landing","SignUp","Login","Home","NewUserPreferences","UserAccount","GameDetails","GameWarden","Search","SearchResults","personalDummyGames","Stack","firebase","firebaseConfig","jsx","_jsx","jsxs","_jsxs","apps","length","initializeApp","App","listTypes","_useState","useState","_useState2","_slicedToArray","username","setUsername","_React$useState","_React$useState2","selectedList","setSelectedList","children","Navigator","Screen","component","options","title","styles","create","container","flex","backgroundColor","alignItems","justifyContent","gameListContent","marginTop"],"sources":["/Users/victoriajquinto/Desktop/hr/blueOcean/TableTop-Collection/TableTopTracker/App.js"],"sourcesContent":["import * as React from 'react';\n\nimport { AppRegistry } from 'react-native';\nimport { PaperProvider } from 'react-native-paper';\nimport { name as appName } from './app.json';\n\nimport theme from './theme';\nimport { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport Landing from './screens/Landing.js'\nimport SignUp from './screens/SignUp.js'\nimport Login from './screens/Login.js'\nimport Home from './screens/Home.js'\nimport NewUserPreferences from './screens/NewUserPreferences.js'\n\n\nimport UserAccount from './screens/UserAccount';\nimport GameDetails from './screens/GameDetails';\nimport GameWarden from './screens/GameWarden';\nimport Search from './screens/Search';\nimport SearchResults from './screens/SearchResults.js';\n\nimport personalDummyGames from './components/GameList/dummy/personalDummyGames';\n\nconst Stack = createNativeStackNavigator();\n\n//yarn add firebase, yarn add @react-native-firebase/auth\nimport firebase from 'firebase/compat/app';\nimport 'firebase/compat/auth';\nimport firebaseConfig from './firebaseConfig.js'\n\n\nif (!firebase.apps.length) {\n  firebase.initializeApp(firebaseConfig);\n}\n\n\n\nexport default function App() {\n\n  // alex: some states & stuff\n  const listTypes = [ 'All', 'My Games', 'Recommendations', 'Liked', 'Wishlist' ];\n  // TODO: implement ability to add custom lists\n  const [ username, setUsername ] = useState('Arnold');\n\n  const [ selectedList, setSelectedList ] = React.useState(listTypes[0]);\n\n  return (\n    <PaperProvider theme={ theme }>\n      <NavigationContainer>\n        <Stack.Navigator>\n            <Stack.Screen\n              name=\"Landing\"\n              component={Landing}\n              options={{title: 'TableTop Tracker'}}\n            />\n            <Stack.Screen name=\"Sign Up\" component={SignUp} />\n            <Stack.Screen name=\"Login\" component={Login} />\n            <Stack.Screen name=\"New User Preferences\" component={NewUserPreferences} />\n            <Stack.Screen name=\"User Account\" component={UserAccount} />\n            <Stack.Screen name=\"Home\" component={Home} username={username}/>\n            <Stack.Screen name=\"Game Details\" component={GameDetails} />\n            <Stack.Screen name=\"Game Warden\" component={GameWarden} />\n            <Stack.Screen name=\"Search Results\" component={SearchResults} />\n            <Stack.Screen name=\"Search\" component={Search} />\n          </Stack.Navigator>\n      </NavigationContainer>\n    </PaperProvider>\n  );\n}\n\n// AppRegistry.registerComponent(appName, () => App);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  gameListContent: {\n    flex: 1, // takes 70% of available space\n    marginTop: 10\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}