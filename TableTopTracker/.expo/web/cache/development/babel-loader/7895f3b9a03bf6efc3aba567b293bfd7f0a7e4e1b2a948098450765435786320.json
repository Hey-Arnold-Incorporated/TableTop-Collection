{"ast":null,"code":"import React from 'react';\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport { FAB } from 'react-native-paper';\nimport styles from \"./styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default function ButtonList(_ref) {\n  var listTypes = _ref.listTypes,\n    selectedList = _ref.selectedList,\n    setSelectedList = _ref.setSelectedList;\n  return _jsx(View, {\n    style: styles.container,\n    children: _jsx(ScrollView, {\n      horizontal: true,\n      children: listTypes.map(function (list, i) {\n        return _jsx(View, {\n          style: styles.buttonMargin,\n          children: _jsx(Button, {\n            title: list,\n            onPress: function onPress() {\n              return setSelectedList(list);\n            },\n            style: [styles.focusButton, selectedList === list && styles.selectedButton, i !== listTypes.length - 1 && styles.buttonMargin]\n          }, list)\n        }, i);\n      })\n    })\n  });\n}","map":{"version":3,"names":["React","ScrollView","View","Text","Button","FAB","styles","jsx","_jsx","ButtonList","_ref","listTypes","selectedList","setSelectedList","style","container","children","horizontal","map","list","i","buttonMargin","title","onPress","focusButton","selectedButton","length"],"sources":["/Users/victoriajquinto/Desktop/hr/blueOcean/TableTop-Collection/TableTopTracker/components/GameList/ButtonList.js"],"sourcesContent":["import React from 'react';\nimport { ScrollView, View, Text, Button } from 'react-native';\nimport { FAB } from 'react-native-paper'; // <â€” ideal (need icon) **\nimport styles from './styles';\n\nexport default function ButtonList({ listTypes, selectedList, setSelectedList }) {\n  return (\n    <View style={ styles.container }>\n      <ScrollView horizontal>\n        { listTypes.map((list, i) => (\n          <View style={ styles.buttonMargin } key = {i}>\n              <Button\n                key={ list }\n                title={ list }\n                onPress={ () => setSelectedList(list) }\n                style={[\n                  styles.focusButton,\n                  // apply selectedButton style when selectedList matches current\n                  selectedList === list && styles.selectedButton,\n                  // add right margin to all except last one\n                  i !== (listTypes.length - 1) && styles.buttonMargin\n                ]}\n              />\n          </View>\n        )) }\n      </ScrollView>\n    </View>\n  );\n}"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAAC,OAAAC,UAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,IAAA;AAAA,OAAAC,MAAA;AAE1B,SAASC,GAAG,QAAQ,oBAAoB;AACxC,OAAOC,MAAM;AAAiB,SAAAC,GAAA,IAAAC,IAAA;AAE9B,eAAe,SAASC,UAAUA,CAAAC,IAAA,EAA+C;EAAA,IAA5CC,SAAS,GAAAD,IAAA,CAATC,SAAS;IAAEC,YAAY,GAAAF,IAAA,CAAZE,YAAY;IAAEC,eAAe,GAAAH,IAAA,CAAfG,eAAe;EAC3E,OACEL,IAAA,CAACN,IAAI;IAACY,KAAK,EAAGR,MAAM,CAACS,SAAW;IAAAC,QAAA,EAC9BR,IAAA,CAACP,UAAU;MAACgB,UAAU;MAAAD,QAAA,EAClBL,SAAS,CAACO,GAAG,CAAC,UAACC,IAAI,EAAEC,CAAC;QAAA,OACtBZ,IAAA,CAACN,IAAI;UAACY,KAAK,EAAGR,MAAM,CAACe,YAAc;UAAAL,QAAA,EAC/BR,IAAA,CAACJ,MAAM;YAELkB,KAAK,EAAGH,IAAM;YACdI,OAAO,EAAG,SAAAA,QAAA;cAAA,OAAMV,eAAe,CAACM,IAAI,CAAC;YAAA,CAAE;YACvCL,KAAK,EAAE,CACLR,MAAM,CAACkB,WAAW,EAElBZ,YAAY,KAAKO,IAAI,IAAIb,MAAM,CAACmB,cAAc,EAE9CL,CAAC,KAAMT,SAAS,CAACe,MAAM,GAAG,CAAE,IAAIpB,MAAM,CAACe,YAAY;UACnD,GATIF,IAUP;QAAC,GAZqCC,CAarC,CAAC;MAAA,CACR;IAAC,CACQ;EAAC,CACT,CAAC;AAEX"},"metadata":{},"sourceType":"module","externalDependencies":[]}