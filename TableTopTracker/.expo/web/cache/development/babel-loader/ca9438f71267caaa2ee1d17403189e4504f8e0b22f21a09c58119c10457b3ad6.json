{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport { StatusBar } from 'expo-status-bar';\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as React from 'react';\nimport { NavigationContainer } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport Landing from \"./screens/Landing.js\";\nimport SignUp from \"./screens/SignUp.js\";\nimport Login from \"./screens/Login.js\";\nimport NewUserPreferences from \"./screens/NewUserPreferences.js\";\nimport AccountDetails from \"./screens/AccountDetails.js\";\nimport CommonLayout from \"./screens/NavBar.js\";\nimport AppRegistry from \"react-native-web/dist/exports/AppRegistry\";\nimport { PaperProvider } from 'react-native-paper';\nimport { name as appName } from \"./app.json\";\nimport theme from \"./theme\";\nimport GamesList from \"./components/GameList/GamesList\";\nimport Recommendations from \"./components/Recommendation/Recommendations\";\nimport MyGames from \"./components/GameList/MyGames\";\nimport ButtonList from \"./components/GameList/ButtonList\";\nimport allDummyGames from \"./components/GameList/dummy/allDummyGames\";\nimport recommendedDummyGames from \"./components/Recommendation/recommendedDummyGames\";\nimport personalDummyGames from \"./components/GameList/dummy/personalDummyGames\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Stack = createNativeStackNavigator();\nexport default function App() {\n  var listTypes = ['All', 'My Games', 'Recommendations', 'Liked', 'Wishlist'];\n  var _React$useState = React.useState(listTypes[0]),\n    _React$useState2 = _slicedToArray(_React$useState, 2),\n    selectedList = _React$useState2[0],\n    setSelectedList = _React$useState2[1];\n  return _jsxs(PaperProvider, {\n    theme: theme,\n    children: [_jsx(NavigationContainer, {\n      children: _jsx(CommonLayout, {\n        children: _jsxs(Stack.Navigator, {\n          children: [_jsx(Stack.Screen, {\n            name: \"Landing\",\n            component: Landing,\n            options: {\n              title: 'TableTop Tracker'\n            }\n          }), _jsx(Stack.Screen, {\n            name: \"Sign Up\",\n            component: SignUp\n          }), _jsx(Stack.Screen, {\n            name: \"Login\",\n            component: Login\n          }), _jsx(Stack.Screen, {\n            name: \"Account Details\",\n            component: AccountDetails\n          }), _jsx(Stack.Screen, {\n            name: \"New User Preferences\",\n            component: NewUserPreferences\n          })]\n        })\n      })\n    }), _jsxs(View, {\n      style: styles.gameListContent,\n      children: [_jsx(ButtonList, {\n        listTypes: listTypes,\n        selectedList: selectedList,\n        setSelectedList: setSelectedList\n      }), _jsx(GamesList, {\n        games: allDummyGames,\n        selectedList: selectedList\n      })]\n    })]\n  });\n}\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  gameListContent: {\n    flex: 1,\n    marginTop: 10\n  }\n});","map":{"version":3,"names":["StatusBar","StyleSheet","Text","View","Button","React","NavigationContainer","createNativeStackNavigator","Landing","SignUp","Login","NewUserPreferences","AccountDetails","CommonLayout","AppRegistry","PaperProvider","name","appName","theme","GamesList","Recommendations","MyGames","ButtonList","allDummyGames","recommendedDummyGames","personalDummyGames","jsx","_jsx","jsxs","_jsxs","Stack","App","listTypes","_React$useState","useState","_React$useState2","_slicedToArray","selectedList","setSelectedList","children","Navigator","Screen","component","options","title","style","styles","gameListContent","games","create","container","flex","backgroundColor","alignItems","justifyContent","marginTop"],"sources":["/Users/victoriajquinto/Desktop/hr/blueOcean/TableTop-Collection/TableTopTracker/App.js"],"sourcesContent":["import { StatusBar } from 'expo-status-bar';\nimport { StyleSheet, Text, View, Button } from 'react-native';\n\nimport * as React from 'react';\nimport {NavigationContainer} from '@react-navigation/native';\nimport {createNativeStackNavigator} from '@react-navigation/native-stack';\nimport Landing from './screens/Landing.js'\nimport SignUp from './screens/SignUp.js'\nimport Login from './screens/Login.js'\nimport NewUserPreferences from './screens/NewUserPreferences.js'\nimport AccountDetails from './screens/AccountDetails.js'\nimport CommonLayout from './screens/NavBar.js'\n\n\nimport { AppRegistry } from 'react-native';\nimport { PaperProvider } from 'react-native-paper';\nimport { name as appName } from './app.json';\nimport theme from './theme';\n\n// alex: gameslist components / dummy data\nimport GamesList from './components/GameList/GamesList';\nimport Recommendations from './components/Recommendation/Recommendations';\nimport MyGames from './components/GameList/MyGames';\nimport ButtonList from './components/GameList/ButtonList';\nimport allDummyGames from './components/GameList/dummy/allDummyGames';\nimport recommendedDummyGames from './components/Recommendation/recommendedDummyGames';\nimport personalDummyGames from './components/GameList/dummy/personalDummyGames';\n\nconst Stack = createNativeStackNavigator();\n\nexport default function App() {\n\n  // alex: some states & stuff\n  const listTypes = [ 'All', 'My Games', 'Recommendations', 'Liked', 'Wishlist' ];\n  // TODO: implement ability to add custom lists\n\n  const [ selectedList, setSelectedList ] = React.useState(listTypes[0]);\n\n  return (\n    <PaperProvider theme={ theme }>\n      <NavigationContainer>\n        <CommonLayout>\n          <Stack.Navigator>\n\n          <Stack.Screen\n            name=\"Landing\"\n            component={Landing}\n            options={{title: 'TableTop Tracker'}}\n          />\n          <Stack.Screen name=\"Sign Up\" component={SignUp} />\n          <Stack.Screen name=\"Login\" component={Login} />\n          <Stack.Screen name=\"Account Details\" component={AccountDetails} />\n          <Stack.Screen name=\"New User Preferences\" component={NewUserPreferences} />\n          </Stack.Navigator>\n        </CommonLayout>\n        \n      </NavigationContainer>\n\n      {/* GamesList stuff */}\n      <View style={ styles.gameListContent }>\n        <ButtonList\n          listTypes={ listTypes }\n          selectedList={ selectedList }\n          setSelectedList={ setSelectedList }\n        />\n        <GamesList\n          games={ allDummyGames }\n          selectedList={ selectedList }\n        />\n        {/* <Recommendations games={ recommendedDummyGames } /> */}\n        {/* <MyGames games={ personalDummyGames } /> */}\n      </View>\n    </PaperProvider>\n  );\n}\n\n// AppRegistry.registerComponent(appName, () => App);\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n  },\n  gameListContent: {\n    flex: 1, // takes 70% of available space\n    marginTop: 10\n  },\n});"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}